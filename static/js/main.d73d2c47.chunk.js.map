{"version":3,"sources":["style.js","views/MetricsViews/ResistantPatient.js","views/MetricsViews/ViralLoadProbability.js","views/MetricsViews/DrugSideEffectBarGraph.js","views/MetricsViews/Dashboards.js","views/ResetViewsButton.js","views/PatientViews/PatientList.js","views/PatientViews/EditPatient.js","views/PatientViews/CreatePatient.js","views/TrialViews/TrialList.js","views/TrialViews/EditClinicalTrial.js","views/CompanyViews/CompanyList.js","views/DrugViews/DrugSymptoms.js","App.js","index.js"],"names":["CardStyle","justifyContent","position","alignContent","display","padding","boxShadow","theme","createMuiTheme","palette","type","ResistantPatient","useState","chartData","setChartData","useEffect","axios","get","then","res","console","log","total","data","resistantPatient","nonResistantPatient","labels","datasets","toFixed","backgroundColor","catch","err","Card","style","options","responsive","title","fontSize","fontFamily","text","ViralLoadProbability","detectable","undetectable","DrugSideEffectBarGraph","analyseData","reduce","accumulator","currentValue","drug","drug_name","Object","keys","values","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","legend","useStyles","makeStyles","root","flexGrow","paper","spacing","textAlign","Dashboards","classes","className","Grid","container","item","xs","ResetViewsButton","selectedIds","refresh","useRefresh","notify","useNotify","unselectAll","useUnselectAll","useUpdateMany","views","onSuccess","onFailure","error","updateMany","loading","Button","label","disabled","onClick","VisibilityOff","PatientPagination","props","Pagination","rowsPerPageOptions","List","exporter","posts","postsForExport","map","post","backlinks","author","postForExport","author_name","name","jsonExport","headers","csv","downloadCSV","BulkActionButtons","BulkDeleteButton","PatientList","pagination","bulkActionButtons","Datagrid","rowClick","TextField","source","DateField","DeleteButton","basePath","EditButton","EditPatient","Edit","SimpleForm","TextInput","DateInput","SelectInput","optionText","choices","id","CreatePatient","Create","TrialList","EditClinicalTrial","CompanyList","DrugSymptoms","expand","NumberField","dataProvider","simpleRestProvider","url","Headers","Accept","set","fetchUtils","fetchJson","App","Admin","Resource","list","edit","create","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d73d2c47.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const GridStyle = {\r\n    justifyContent:\"space-around\",\r\n    display:\"flex\",\r\n    // padding: \"10px\",\r\n};\r\n\r\nexport const CardStyle = {\r\n    justifyContent:\"space-evenly\",\r\n    // width:\"40%\",\r\n    position: \"relative\",\r\n    alignContent:\"center\",\r\n    display:\"flex\",\r\n    padding:\"20px\", \r\n    boxShadow: '5px 10px 8px #888888', \r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n      type:\"dark\"\r\n    },\r\n  });\r\n\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardStyle } from \"../../style\";\r\n\r\nfunction ResistantPatient() {\r\n  const [chartData, setChartData] = useState();\r\n\r\n  let chart = () => {\r\n    axios\r\n      .get(\"https://arv-server.herokuapp.com/clinical_trial/resistant\")\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        let total = res.data.resistantPatient + res.data.nonResistantPatient\r\n\r\n        setChartData({\r\n          labels: [\"% Drug resistant\", \"% Non Drug Resistant\"],\r\n          datasets: [\r\n            {\r\n              data: [((res.data.resistantPatient/total)*100).toFixed(2), ((res.data.nonResistantPatient/total)*100).toFixed(2)],\r\n              backgroundColor: [\"#af0069\", \"#64dfdf\"],\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <Card style={CardStyle}>\r\n      <Pie \r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          title: {\r\n            fontSize:18, \r\n            fontFamily:\"Arial\", \r\n            text: \"Percentage of Drug-resistant vs. Non Drug-resistant Trials\",\r\n            display: true,\r\n          },\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ResistantPatient;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardStyle } from \"../../style\";\r\n\r\nfunction ViralLoadProbability() {\r\n  const [chartData, setChartData] = useState();\r\n\r\n  let chart = () => {\r\n    axios\r\n      .get(\"https://arv-server.herokuapp.com/clinical_trial/viral_load\")\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        let total = res.data.detectable + res.data.undetectable\r\n\r\n        setChartData({\r\n          labels: [\"% Detectable\", \"% Undetectable\"],\r\n          datasets: [\r\n            {\r\n              data: [((res.data.detectable/total)*100).toFixed(2), ((res.data.undetectable/total)*100).toFixed(2)],\r\n              backgroundColor: [\"#f6c065\", \"#a6f0c6\"],\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <Card style={CardStyle}>\r\n      <Pie \r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          title: {\r\n            fontSize:18, \r\n            fontFamily:\"Arial\", \r\n            text: \"Percentage of Trials with Detectable vs. Undetectable Viral Load after 6 months\",\r\n            display: true,\r\n          },\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ViralLoadProbability;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardStyle } from \"../../style\";\r\n\r\nfunction DrugSideEffectBarGraph() {\r\n  const [chartData, setChartData] = useState();\r\n\r\n  let chart = () => {\r\n    axios\r\n      .get(\"https://arv-server.herokuapp.com/drug/symptom\")\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        let analyseData = res.data.reduce((accumulator, currentValue) => {\r\n          let drug = currentValue.drug_name;\r\n          if (!accumulator[drug]) {\r\n            accumulator[drug] = 1;\r\n          } else {\r\n            accumulator[drug] += 1;\r\n          }\r\n          console.log(\"res.data\", res.data);\r\n          console.log(\"accumulator\", accumulator);\r\n          return accumulator;\r\n        }, {});\r\n\r\n        setChartData({\r\n          labels: Object.keys(analyseData),\r\n          datasets: [\r\n            {\r\n              data: Object.values(analyseData),\r\n              backgroundColor: [\"#af0069\", \"#64dfdf\", \"#af0069\", \"#64dfdf\", \"#af0069\"],\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <Card style={CardStyle}>\r\n      <Bar\r\n        data={chartData}\r\n        options={{\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        maintainAspectRatio: true,\r\n                    }\r\n                }],\r\n            }, \r\n            legend: {\r\n                display: false,\r\n            },\r\n          responsive: true,\r\n          title: {\r\n            fontSize: 18,\r\n            fontFamily: \"Arial\",\r\n            text: \"Percentage of Drug-resistant vs. Non Drug-resistant Trials\",\r\n            display: true,\r\n          },\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DrugSideEffectBarGraph;\r\n","import React from \"react\";\r\nimport ResistantPatient from \"./ResistantPatient\";\r\nimport ViralLoadProbability from \"./ViralLoadProbability\";\r\nimport DrugSideEffectBarGraph from \"./DrugSideEffectBarGraph\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { GridStyle } from \"../../style\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Dashboards() {\r\n  const classes = useStyles();\r\n  return (\r\n    // <Grid container sspacing={3}>\r\n    //   <Grid item xs= {10}> <ResistantPatient /> </Grid>\r\n    //   <Grid item xs= {10} > <ViralLoadProbability /></Grid>\r\n    //   <DrugSideEffectBarGraph />\r\n    // </Grid>\r\n\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <ResistantPatient className={classes.paper} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <ViralLoadProbability className={classes.paper} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DrugSideEffectBarGraph className={classes.paper} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboards;\r\n","import * as React from \"react\";\r\nimport {\r\n    Button,\r\n    useUpdateMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useUnselectAll,\r\n} from 'react-admin';\r\nimport { VisibilityOff } from '@material-ui/icons';\r\n\r\nconst ResetViewsButton = ({ selectedIds }) => {\r\n    const refresh = useRefresh();\r\n    const notify = useNotify();\r\n    const unselectAll = useUnselectAll();\r\n    const [updateMany, { loading }] = useUpdateMany(\r\n        'posts',\r\n        selectedIds,\r\n        { views: 0 },\r\n        {\r\n            onSuccess: () => {\r\n                refresh();\r\n                notify('Updated');\r\n                unselectAll('posts');\r\n            },\r\n            onFailure: error => notify('Error: posts not updated', 'warning'),\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            label=\"simple.action.resetViews\"\r\n            disabled={loading}\r\n            onClick={updateMany}\r\n        >\r\n            <VisibilityOff />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default ResetViewsButton;","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DateField,\r\n  DeleteButton,\r\n  EditButton,\r\n  Pagination,\r\n  downloadCSV, \r\n\r\n} from \"react-admin\";\r\nimport { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BulkDeleteButton } from 'react-admin';\r\nimport jsonExport from \"jsonexport/dist\";\r\nimport ResetViewsButton from '../ResetViewsButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst PatientPagination = (props) => (\r\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\r\n);\r\nconst useStyles = makeStyles({\r\n  List: {\r\n      backgroundColor:'#0e918c'\r\n      \r\n  },\r\n});\r\nconst exporter = (posts) => {\r\n  const postsForExport = posts.map((post) => {\r\n    const { backlinks, author, ...postForExport } = post; // omit backlinks and author\r\n    postForExport.author_name = post.author.name; // add a field\r\n    return postForExport;\r\n  });\r\n  jsonExport(\r\n    postsForExport,\r\n    {\r\n      headers: [\"id\", \"title\", \"author_name\", \"body\"], // order fields in the export\r\n    },\r\n    (err, csv) => {\r\n      downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\r\n    }\r\n  );\r\n};\r\n\r\nconst BulkActionButtons = (props) => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nfunction PatientList(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n    {...props}\r\n    pagination={<PatientPagination />}\r\n    exporter={exporter}\r\n    bulkActionButtons={<BulkActionButtons />}\r\n  >\r\n    <Datagrid className= {classes.List} rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"patient_name\" />\r\n      <TextField source=\"gender\" />\r\n      <DateField source=\"dateofbirth\" />\r\n      <DeleteButton basePath=\"/patient\" />\r\n      <EditButton basePath=\"/patient\" />\r\n    </Datagrid>\r\n  </List>\r\n)};\r\nexport default PatientList;\r\n","import React from \"react\";\r\nimport {\r\n  DateInput,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  SelectInput,\r\n} from \"react-admin\";\r\n\r\nfunction EditPatient(props) {\r\n  return (\r\n    <Edit title=\"Edit Patient Information\" {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id\" />\r\n        <TextInput source=\"patient_name\" />\r\n        <DateInput source=\"dateofbirth\" />\r\n        <SelectInput\r\n          optionText=\"name\"\r\n          source=\"gender\"\r\n          choices={[\r\n            { id: \"male\", name: \"Male\" },\r\n            { id: \"female\", name: \"Female\" },\r\n          ]}\r\n        />\r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n}\r\n\r\nexport default EditPatient;\r\n","import React from 'react';\r\nimport {\r\n    DateInput,\r\n    Create,\r\n    SimpleForm,\r\n    TextInput,\r\n    SelectInput,\r\n  } from \"react-admin\";\r\n\r\nfunction CreatePatient(props) {\r\n    return (\r\n        <Create title=\"Create a new Patient Record\" {...props}>\r\n      <SimpleForm>\r\n        <TextInput source=\"id\" />\r\n        <TextInput source=\"patient_name\" />\r\n        <DateInput source=\"dateofbirth\" />\r\n        <SelectInput\r\n          optionText=\"name\"\r\n          source=\"gender\"\r\n          choices={[\r\n            { id: \"male\", name: \"Male\" },\r\n            { id: \"female\", name: \"Female\" },\r\n          ]}\r\n        />\r\n      </SimpleForm>\r\n    </Create>\r\n    )\r\n}\r\n\r\nexport default CreatePatient\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport jsonExport from \"jsonexport/dist\";\r\nimport React, { Fragment } from \"react\";\r\nimport {\r\n  BulkDeleteButton, Datagrid, DateField,\r\n  DeleteButton, downloadCSV, EditButton, List, Pagination, TextField\r\n} from \"react-admin\";\r\nimport ResetViewsButton from '../ResetViewsButton';\r\n\r\nconst PatientPagination = (props) => (\r\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\r\n);\r\nconst useStyles = makeStyles({\r\n  List: {\r\n    backgroundColor: \"#0e918c\",\r\n  },\r\n});\r\nconst exporter = (posts) => {\r\n  const postsForExport = posts.map((post) => {\r\n    const { backlinks, author, ...postForExport } = post; // omit backlinks and author\r\n    postForExport.author_name = post.author.name; // add a field\r\n    return postForExport;\r\n  });\r\n  jsonExport(\r\n    postsForExport,\r\n    {\r\n      headers: [\"id\", \"title\", \"author_name\", \"body\"], // order fields in the export\r\n    },\r\n    (err, csv) => {\r\n      downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\r\n    }\r\n  );\r\n};\r\n\r\nconst BulkActionButtons = (props) => (\r\n  <Fragment>\r\n    <ResetViewsButton label=\"Reset Views\" {...props} />\r\n    {/* default bulk delete action */}\r\n    <BulkDeleteButton {...props} />\r\n  </Fragment>\r\n);\r\n\r\nfunction TrialList(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <List\r\n        {...props}\r\n        pagination={<PatientPagination />}\r\n        exporter={exporter}\r\n        bulkActionButtons={<BulkActionButtons />}\r\n      >\r\n        {/* <TrialGrid /> */}\r\n        <Datagrid rowClick=\"edit\" className= {classes.List}>\r\n          <TextField source=\"id_clinical_trial\" />\r\n          <DateField label=\"Start Date\" source=\"startdate\" />\r\n          <TextField label=\"CD4 Initial Record\" source=\"cd4_init_record\" />\r\n          <TextField label=\"CD4 After Record\" source=\"after_6_month\" />\r\n          <TextField source=\"drug_name\" />\r\n          <DeleteButton basePath=\"/clinical_trial\" />ư\r\n          <EditButton basePath=\"/clinical_trial\" />\r\n        </Datagrid>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrialList;\r\n","import React from \"react\";\r\nimport {\r\n  DateInput,\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  SelectInput,\r\n} from \"react-admin\";\r\n\r\nfunction EditClinicalTrial(props) {\r\n  return (\r\n    <Edit title=\"Edit Patient Information\" {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id_clinical_trial\" />\r\n        <DateInput source=\"startdate\" />\r\n        <TextInput source=\"cd4_init_record\" />\r\n        <TextInput source=\"after_6_month\" />\r\n        <TextInput source=\"drug_name\" />\r\n        <TextInput source=\"cd4_init_record\" />\r\n        <TextInput disabled source=\"insurance_id\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n}\r\n\r\nexport default EditClinicalTrial;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DeleteButton,\r\n  EditButton,\r\n} from \"react-admin\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  List: {\r\n      backgroundColor:'#0e918c'\r\n      \r\n  },\r\n});\r\n\r\n\r\nfunction CompanyList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid rowClick=\"edit\" className= {classes.List}>\r\n        <TextField source=\"company_name\" />\r\n        <TextField source=\"description\" />\r\n        <TextField source=\"base\" />\r\n        <DeleteButton basePath=\"/company\" />\r\n        <EditButton basePath=\"/company\" />\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default CompanyList;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DeleteButton,\r\n  EditButton,\r\n  NumberField,\r\n  RichTextField,\r\n  Create\r\n} from \"react-admin\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    List: {\r\n        backgroundColor:'#0e918c'\r\n\r\n    },\r\n});\r\n\r\n\r\nfunction DrugSymptoms(props) {\r\n    const classes = useStyles();\r\n  return (\r\n    <List {...props} >\r\n        \r\n      <Datagrid className={classes.List} expand= {<TextField source=\"description\" />} rowClick=\"edit\">\r\n        <TextField source=\"drug_name\" />\r\n        <TextField source=\"mechanism\" />\r\n        <TextField source=\"dosage\" />\r\n        <TextField source=\"company_name\" />\r\n        <NumberField title = \"Price($)\" source=\"price\" />\r\n        <DeleteButton basePath=\"/drug\" />\r\n        <EditButton basePath=\"/drug\" />\r\n        {/* <Create basePath= \"/drug\"></Create> */}\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default DrugSymptoms;\r\n","import * as React from \"react\";\r\nimport { Admin, Resource } from \"react-admin\";\r\nimport { fetchUtils } from \"ra-core\";\r\nimport simpleRestProvider from \"ra-data-simple-rest\";\r\n\r\nimport Dashboards from \"./views/MetricsViews/Dashboards\";\r\n\r\nimport PatientList from \"./views/PatientViews/PatientList\";\r\nimport EditPatient from \"./views/PatientViews/EditPatient\";\r\nimport CreatePatient from \"./views/PatientViews/CreatePatient\";\r\n\r\nimport TrialList from \"./views/TrialViews/TrialList\";\r\nimport EditClinicalTrial from \"./views/TrialViews/EditClinicalTrial\";\r\n\r\nimport CompanyList from \"./views/CompanyViews/CompanyList\";\r\nimport DrugSymptoms from \"./views/DrugViews/DrugSymptoms\"\r\nimport { theme } from \"./style\";\r\n\r\n\r\n\r\nconst httpClient = (url, options = {}) => {\r\n  if (!options.headers) {\r\n      options.headers = new Headers({ Accept: 'application/json' });\r\n  }\r\n  // add your own headers here\r\n  options.headers.set('Access-Control-Expose-Headers', 'Content-Range');\r\n  options.headers.set('Content-Range', 'bytes : 0-9/*');\r\n\r\n  return fetchUtils.fetchJson(url, options);\r\n}\r\nconst dataProvider = simpleRestProvider('https://arv-server.herokuapp.com', httpClient);\r\n\r\nconsole.log(\"dataProvider\", dataProvider);\r\nconst App = () => (\r\n  <Admin theme={theme} dataProvider={dataProvider}>\r\n    <Resource name=\"Dashboards\" list={Dashboards} />\r\n\r\n    <Resource\r\n      name=\"patient\"\r\n      list={PatientList}\r\n      edit={EditPatient}\r\n      create={CreatePatient}\r\n    />\r\n    <Resource name= \"drug\" list = {DrugSymptoms}/>\r\n    <Resource name=\"company\" list={CompanyList} />\r\n    <Resource name=\"clinical_trial\" list={TrialList} edit={EditClinicalTrial} />\r\n  </Admin>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}