{"version":3,"sources":["style.js","views/MetricsViews/ResistantPatient.js","views/MetricsViews/ViralLoadProbability.js","views/MetricsViews/DrugSideEffectBarGraph.js","views/MetricsViews/Dashboards.js","views/ResetViewsButton.js","views/PatientViews/PatientList.js","views/PatientViews/EditPatient.js","views/PatientViews/CreatePatient.js","views/TrialViews/TrialList.js","views/TrialViews/EditClinicalTrial.js","views/CompanyViews/CompanyList.js","views/CompanyViews/CompanyCreate.js","views/DrugViews/DrugSymptoms.js","App.js","index.js"],"names":["CardStyle","justifyContent","position","alignContent","display","padding","boxShadow","theme","createMuiTheme","palette","type","ResistantPatient","useState","chartData","setChartData","useEffect","axios","get","then","res","console","log","total","data","resistantPatient","nonResistantPatient","labels","datasets","toFixed","backgroundColor","catch","err","Card","style","options","responsive","title","fontSize","fontFamily","text","ViralLoadProbability","detectable","undetectable","DrugSideEffectBarGraph","analyseData","reduce","accumulator","currentValue","drug","drug_name","Object","keys","values","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","legend","useStyles","makeStyles","root","flexGrow","paper","spacing","textAlign","Dashboards","classes","className","Grid","container","item","xs","ResetViewsButton","selectedIds","refresh","useRefresh","notify","useNotify","unselectAll","useUnselectAll","useUpdateMany","views","onSuccess","onFailure","error","updateMany","loading","Button","label","disabled","onClick","VisibilityOff","PatientPagination","props","Pagination","rowsPerPageOptions","List","exporter","posts","postsForExport","map","post","backlinks","author","postForExport","author_name","name","jsonExport","headers","csv","downloadCSV","BulkActionButtons","BulkDeleteButton","PatientList","pagination","bulkActionButtons","Datagrid","rowClick","TextField","source","DateField","DeleteButton","basePath","EditButton","EditPatient","Edit","SimpleForm","TextInput","DateInput","SelectInput","optionText","choices","id","CreatePatient","Create","TrialList","EditClinicalTrial","CompanyList","CompanyCreate","DrugSymptoms","expand","NumberField","dataProvider","simpleRestProvider","url","Headers","Accept","set","fetchUtils","fetchJson","App","Admin","Resource","icon","BarChartIcon","list","create","PeopleIcon","edit","LocalHospitalIcon","BusinessIcon","AssignmentIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ea78a14.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const GridStyle = {\n    justifyContent:\"space-around\",\n    display:\"flex\",\n    // padding: \"10px\",\n};\n\nexport const CardStyle = {\n    justifyContent:\"space-evenly\",\n    // width:\"40%\",\n    position: \"relative\",\n    alignContent:\"center\",\n    display:\"flex\",\n    padding:\"20px\", \n    boxShadow: '5px 10px 8px #888888', \n}\n\nexport const theme = createMuiTheme({\n    palette: {\n      type:\"dark\"\n    },\n  });\n\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nimport { CardStyle } from \"../../style\";\n\nfunction ResistantPatient() {\n  const [chartData, setChartData] = useState();\n\n  let chart = () => {\n    axios\n      .get(\"https://arv-server.herokuapp.com/clinical_trial/resistant\")\n      .then((res) => {\n        console.log(\"res\", res);\n        let total = res.data.resistantPatient + res.data.nonResistantPatient\n\n        setChartData({\n          labels: [\"% Drug resistant\", \"% Non Drug Resistant\"],\n          datasets: [\n            {\n              data: [((res.data.resistantPatient/total)*100).toFixed(2), ((res.data.nonResistantPatient/total)*100).toFixed(2)],\n              backgroundColor: [\"#af0069\", \"#64dfdf\"],\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <Card style={CardStyle}>\n      <Pie \n        data={chartData}\n        options={{\n          responsive: true,\n          title: {\n            fontSize:18, \n            fontFamily:\"Arial\", \n            text: \"Percentage of Drug-resistant vs. Non Drug-resistant Trials\",\n            display: true,\n          },\n        }}\n      />\n    </Card>\n  );\n}\n\nexport default ResistantPatient;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nimport { CardStyle } from \"../../style\";\n\nfunction ViralLoadProbability() {\n  const [chartData, setChartData] = useState();\n\n  let chart = () => {\n    axios\n      .get(\"https://arv-server.herokuapp.com/clinical_trial/viral_load\")\n      .then((res) => {\n        console.log(\"res\", res);\n        let total = res.data.detectable + res.data.undetectable\n\n        setChartData({\n          labels: [\"% Detectable\", \"% Undetectable\"],\n          datasets: [\n            {\n              data: [((res.data.detectable/total)*100).toFixed(2), ((res.data.undetectable/total)*100).toFixed(2)],\n              backgroundColor: [\"#f6c065\", \"#a6f0c6\"],\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <Card style={CardStyle}>\n      <Pie \n        data={chartData}\n        options={{\n          responsive: true,\n          title: {\n            fontSize:18, \n            fontFamily:\"Arial\", \n            text: \"Percentage of Trials with Detectable vs. Undetectable Viral Load after 6 months\",\n            display: true,\n          },\n        }}\n      />\n    </Card>\n  );\n}\n\nexport default ViralLoadProbability;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nimport { CardStyle } from \"../../style\";\n\nfunction DrugSideEffectBarGraph() {\n  const [chartData, setChartData] = useState();\n\n  let chart = () => {\n    axios\n      .get(\"https://arv-server.herokuapp.com/drug/symptom\")\n      .then((res) => {\n        console.log(\"res\", res);\n        let analyseData = res.data.reduce((accumulator, currentValue) => {\n          let drug = currentValue.drug_name;\n          if (!accumulator[drug]) {\n            accumulator[drug] = 1;\n          } else {\n            accumulator[drug] += 1;\n          }\n          console.log(\"res.data\", res.data);\n          console.log(\"accumulator\", accumulator);\n          return accumulator;\n        }, {});\n\n        setChartData({\n          labels: Object.keys(analyseData),\n          datasets: [\n            {\n              data: Object.values(analyseData),\n              backgroundColor: [\"#af0069\", \"#64dfdf\", \"#af0069\", \"#64dfdf\", \"#af0069\"],\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <Card style={CardStyle}>\n      <Bar\n        data={chartData}\n        options={{\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        maintainAspectRatio: true,\n                    }\n                }],\n            }, \n            legend: {\n                display: false,\n            },\n          responsive: true,\n          title: {\n            fontSize: 18,\n            fontFamily: \"Arial\",\n            text: \"Percentage of Drug-resistant vs. Non Drug-resistant Trials\",\n            display: true,\n          },\n        }}\n      />\n    </Card>\n  );\n}\n\nexport default DrugSideEffectBarGraph;\n","import React from \"react\";\nimport ResistantPatient from \"./ResistantPatient\";\nimport ViralLoadProbability from \"./ViralLoadProbability\";\nimport DrugSideEffectBarGraph from \"./DrugSideEffectBarGraph\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { GridStyle } from \"../../style\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction Dashboards() {\n  const classes = useStyles();\n  return (\n    // <Grid container sspacing={3}>\n    //   <Grid item xs= {10}> <ResistantPatient /> </Grid>\n    //   <Grid item xs= {10} > <ViralLoadProbability /></Grid>\n    //   <DrugSideEffectBarGraph />\n    // </Grid>\n\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <ResistantPatient className={classes.paper} />\n        </Grid>\n        <Grid item xs={6}>\n          <ViralLoadProbability className={classes.paper} />\n        </Grid>\n        <Grid item xs={12}>\n          <DrugSideEffectBarGraph className={classes.paper} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboards;\n","import * as React from \"react\";\nimport {\n    Button,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n} from 'react-admin';\nimport { VisibilityOff } from '@material-ui/icons';\n\nconst ResetViewsButton = ({ selectedIds }) => {\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const [updateMany, { loading }] = useUpdateMany(\n        'posts',\n        selectedIds,\n        { views: 0 },\n        {\n            onSuccess: () => {\n                refresh();\n                notify('Updated');\n                unselectAll('posts');\n            },\n            onFailure: error => notify('Error: posts not updated', 'warning'),\n        }\n    );\n\n    return (\n        <Button\n            label=\"simple.action.resetViews\"\n            disabled={loading}\n            onClick={updateMany}\n        >\n            <VisibilityOff />\n        </Button>\n    );\n};\n\nexport default ResetViewsButton;","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  DateField,\n  DeleteButton,\n  EditButton,\n  Pagination,\n  downloadCSV, \n\n} from \"react-admin\";\nimport { Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { BulkDeleteButton } from 'react-admin';\nimport jsonExport from \"jsonexport/dist\";\nimport ResetViewsButton from '../ResetViewsButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst PatientPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\n);\nconst useStyles = makeStyles({\n  List: {\n      backgroundColor:'#0e918c'\n      \n  },\n});\nconst exporter = (posts) => {\n  const postsForExport = posts.map((post) => {\n    const { backlinks, author, ...postForExport } = post; // omit backlinks and author\n    postForExport.author_name = post.author.name; // add a field\n    return postForExport;\n  });\n  jsonExport(\n    postsForExport,\n    {\n      headers: [\"id\", \"title\", \"author_name\", \"body\"], // order fields in the export\n    },\n    (err, csv) => {\n      downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\n    }\n  );\n};\n\nconst BulkActionButtons = (props) => (\n  <Fragment>\n    <ResetViewsButton label=\"Reset Views\" {...props} />\n    {/* default bulk delete action */}\n    <BulkDeleteButton {...props} />\n  </Fragment>\n);\n\nfunction PatientList(props) {\n  const classes = useStyles();\n  return (\n    <List\n    {...props}\n    pagination={<PatientPagination />}\n    exporter={exporter}\n    bulkActionButtons={<BulkActionButtons />}\n  >\n    <Datagrid className= {classes.List} rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <TextField source=\"patient_name\" />\n      <TextField source=\"gender\" />\n      <DateField source=\"dateofbirth\" />\n      <DeleteButton basePath=\"/patient\" />\n      <EditButton basePath=\"/patient\" />\n    </Datagrid>\n  </List>\n)};\nexport default PatientList;\n","import React from \"react\";\nimport {\n  DateInput,\n  Edit,\n  SimpleForm,\n  TextInput,\n  SelectInput,\n} from \"react-admin\";\n\nfunction EditPatient(props) {\n  return (\n    <Edit title=\"Edit Patient Information\" {...props}>\n      <SimpleForm>\n        <TextInput disabled source=\"id\" />\n        <TextInput source=\"patient_name\" />\n        <DateInput source=\"dateofbirth\" />\n        <SelectInput\n          optionText=\"name\"\n          source=\"gender\"\n          choices={[\n            { id: \"male\", name: \"Male\" },\n            { id: \"female\", name: \"Female\" },\n          ]}\n        />\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport default EditPatient;\n","import React from 'react';\nimport {\n    DateInput,\n    Create,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n  } from \"react-admin\";\n\nfunction CreatePatient(props) {\n    return (\n        <Create title=\"Create a new Patient Record\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"id\" />\n        <TextInput source=\"patient_name\" />\n        <DateInput source=\"dateofbirth\" />\n        <SelectInput\n          optionText=\"name\"\n          source=\"gender\"\n          choices={[\n            { id: \"male\", name: \"Male\" },\n            { id: \"female\", name: \"Female\" },\n          ]}\n        />\n      </SimpleForm>\n    </Create>\n    )\n}\n\nexport default CreatePatient\n","import { makeStyles } from \"@material-ui/core\";\nimport jsonExport from \"jsonexport/dist\";\nimport React, { Fragment } from \"react\";\nimport {\n  BulkDeleteButton, Datagrid, DateField,\n  DeleteButton, downloadCSV, EditButton, List, Pagination, TextField\n} from \"react-admin\";\nimport ResetViewsButton from '../ResetViewsButton';\n\nconst PatientPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\n);\nconst useStyles = makeStyles({\n  List: {\n    backgroundColor: \"#0e918c\",\n  },\n});\nconst exporter = (posts) => {\n  const postsForExport = posts.map((post) => {\n    const { backlinks, author, ...postForExport } = post; // omit backlinks and author\n    postForExport.author_name = post.author.name; // add a field\n    return postForExport;\n  });\n  jsonExport(\n    postsForExport,\n    {\n      headers: [\"id\", \"title\", \"author_name\", \"body\"], // order fields in the export\n    },\n    (err, csv) => {\n      downloadCSV(csv, \"posts\"); // download as 'posts.csv` file\n    }\n  );\n};\n\nconst BulkActionButtons = (props) => (\n  <Fragment>\n    <ResetViewsButton label=\"Reset Views\" {...props} />\n    {/* default bulk delete action */}\n    <BulkDeleteButton {...props} />\n  </Fragment>\n);\n\nfunction TrialList(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <List\n        {...props}\n        pagination={<PatientPagination />}\n        exporter={exporter}\n        bulkActionButtons={<BulkActionButtons />}\n      >\n        {/* <TrialGrid /> */}\n        <Datagrid rowClick=\"edit\" className= {classes.List}>\n          <TextField source=\"id_clinical_trial\" />\n          <DateField label=\"Start Date\" source=\"startdate\" />\n          <TextField label=\"CD4 Initial Record\" source=\"cd4_init_record\" />\n          <TextField label=\"CD4 After Record\" source=\"after_6_month\" />\n          <TextField source=\"drug_name\" />\n          <DeleteButton basePath=\"/clinical_trial\" />ư\n          <EditButton basePath=\"/clinical_trial\" />\n        </Datagrid>\n      </List>\n    </div>\n  );\n}\n\nexport default TrialList;\n","import React from \"react\";\nimport {\n  DateInput,\n  Edit,\n  SimpleForm,\n  TextInput,\n  SelectInput,\n} from \"react-admin\";\n\nfunction EditClinicalTrial(props) {\n  return (\n    <Edit title=\"Edit Patient Information\" {...props}>\n      <SimpleForm>\n        <TextInput disabled source=\"id_clinical_trial\" />\n        <DateInput source=\"startdate\" />\n        <TextInput source=\"cd4_init_record\" />\n        <TextInput source=\"after_6_month\" />\n        <TextInput source=\"drug_name\" />\n        <TextInput source=\"cd4_init_record\" />\n        <TextInput disabled source=\"insurance_id\" />\n      </SimpleForm>\n    </Edit>\n  );\n}\n\nexport default EditClinicalTrial;\n","import React from \"react\";\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  DeleteButton,\n  EditButton,\n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n  List: {\n      backgroundColor:'#0e918c'\n      \n  },\n});\n\n\nfunction CompanyList(props) {\n  const classes = useStyles();\n\n  return (\n    <List {...props}>\n      <Datagrid rowClick=\"edit\" className= {classes.List}>\n        <TextField source=\"company_name\" />\n        <TextField source=\"description\" />\n        <TextField source=\"base\" />\n        <DeleteButton basePath=\"/company\" />\n        <EditButton basePath=\"/company\" />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport default CompanyList;\n","import React from 'react';\nimport {\n    DateInput,\n    Create,\n    SimpleForm,\n    TextInput,\n  } from \"react-admin\";\n\nfunction CompanyCreate(props) {\n    return (\n        <Create title=\"Add a new company to the list\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"id\" />\n        <TextInput source=\"description\" />\n        <DateInput source=\"base\" />\n      </SimpleForm>\n    </Create>\n    )\n}\n\nexport default CompanyCreate\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  DeleteButton,\n  EditButton,\n  NumberField,\n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    List: {\n        backgroundColor:'#0e918c'\n\n    },\n});\n\n\nfunction DrugSymptoms(props) {\n    const classes = useStyles();\n  return (\n    <List {...props} >\n        \n      <Datagrid className={classes.List} expand= {<TextField source=\"description\" />} rowClick=\"edit\">\n        <TextField source=\"drug_name\" />\n        <TextField source=\"mechanism\" />\n        <TextField source=\"dosage\" />\n        <TextField source=\"company_name\" />\n        <NumberField title = \"Price($)\" source=\"price\" />\n        <DeleteButton basePath=\"/drug\" />\n        <EditButton basePath=\"/drug\" />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport default DrugSymptoms;\n","import * as React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { fetchUtils } from \"ra-core\";\nimport simpleRestProvider from \"ra-data-simple-rest\";\n\nimport Dashboards from \"./views/MetricsViews/Dashboards\";\n\nimport PatientList from \"./views/PatientViews/PatientList\";\nimport EditPatient from \"./views/PatientViews/EditPatient\";\nimport CreatePatient from \"./views/PatientViews/CreatePatient\";\n\nimport TrialList from \"./views/TrialViews/TrialList\";\nimport EditClinicalTrial from \"./views/TrialViews/EditClinicalTrial\";\n\nimport CompanyList from \"./views/CompanyViews/CompanyList\";\nimport CompanyCreate from \"./views/CompanyViews/CompanyCreate\";\nimport DrugSymptoms from \"./views/DrugViews/DrugSymptoms\"\nimport { theme } from \"./style\";\n\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\n\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n\n  options.headers.set('Access-Control-Expose-Headers', 'Content-Range');\n  options.headers.set('Content-Range', 'bytes : 0-9/*');\n\n  return fetchUtils.fetchJson(url, options);\n}\n\nconst dataProvider = simpleRestProvider('https://arv-server.herokuapp.com', httpClient);\n\nconsole.log(\"dataProvider\", dataProvider);\nconst App = () => (\n  <Admin theme={theme} dataProvider={dataProvider}>\n    <Resource icon={BarChartIcon} name=\"Dashboards\" list={Dashboards} create={CompanyCreate} />\n\n    <Resource\n      icon={PeopleIcon}\n      name=\"patient\"\n      list={PatientList}\n      edit={EditPatient}\n      create={CreatePatient}\n    />\n    <Resource icon={LocalHospitalIcon} name=\"drug\" list={DrugSymptoms} />\n\n    <Resource icon = {BusinessIcon} name=\"company\" list={CompanyList} />\n    <Resource icon = {AssignmentIcon} name=\"clinical_trial\" list={TrialList} edit={EditClinicalTrial} />\n  </Admin>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}